Kotlin——初级篇（一）：最详细的环境搭建

众所周知，Kotlin出来已经良久了。Kotlin有着众多优势，不管是用于Android开发中，还是Java开发，都能缩减很大的代码量，大大提高了工作效率。而小生本人也是才从忙碌的个工作中抽身出来，有点儿空闲的时间学习这新鲜的技术。无疑的是这是一股新鲜的血液，也是引领技术领略的潮流。


Kotlin——初级篇（二）：变量、常量、注释

在Kotlin中的变量、常量以及注释多多少少和Java语言是有着不同之处的。不管是变量、常量的定义方式，还是注释的使用。下面详细的介绍Kotlin中的变量、常量、注释的使用。以及和Java的对比。
 /**
     * 声明不可空变量（必须初始化）：
     * 关键字 变量名: 数据类型 == xxx
     * 关键字：var（普通） val（final）
     *
     * 声明可空变量（必须初始化）：
     * 关键字 变量名: 数据类型?  = null/xxx
     * 关键字：var（普通） val（final）
     *
     * 声明后期初始化变量(可以不初始化)
     * lateinit 键字 变量名: 数据类型/组件等
     * 使用关键字lateinit注意事项：
     * 必须是var声明的变量
     * 不能声明可空变量
     * 不能声明基本数据类型 Int Float Double等,String可以
     * 声明后，使用前必须赋值，否则会报UninitializedPropertyAccessException
     *
     * 声明延迟初始化变量
     * 关键字 变量名: 数据类型 by lazy {}
     * 使用关键字lazy注意事项：
     * 必须是val都很忙的变量
     * 不能用于类型判断
     * 且在变量的数据类型后用by连接
     *
     * 声明常量
     * const 关键字 变量名: 数据类型 == xxx
     * 使用const关键字注意事项：
     * 只能修饰val
     * 顶层
     * 在object修饰的类中声明
     * 伴生对象中声明
     *
     * 注释和JAVA一样
     *
     */

